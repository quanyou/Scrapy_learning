从网页中提取数据，Scrapy使用基于XPath和CSS表达式机制：Scrapy Selectors。

XPath学习

XPath在XML文档中查找信息的语言。对XML文档中的元素和属性进行遍历。

XPath路径表达式：Xpath使用路径表达式来选取XML文档中的节点或者节点集。

1、节点（Node）
七种节点：元素、属性、文本、命名空间、处理指令、注释以及文档节点。树的根被称为文档节点或者根节点

    基本值（或者称原子值，Atomic value）：无父或无子的节点。

    项目（item）：基本值或者节点

    节点关系
        父（Parent）：每个元素以及属性都有一个父。
        子（Children）：元素节点可有零个、一个或多个子。
        同胞（Sibling）：相同的父节点。
        先辈（Ancestor）：某节点的父、父的父等等。
        后代（Descendant）：某个节点的子，子的子等等。


XPath使用路径表达式来选取XML文档中的节点或节点集。节点是通过沿着路径（path）或者步（steps）来选取的。

选取节点：
nodename    :   选取此节点的所有子节点
/           :   从根节点选取
//          :   从匹配选择的当前节点选择文档中的节点，而不考虑他们的位置
.           :   选取当前节点
..          :   选取当前节点的父节点
@           :   选取属性


谓语（Predicates）：查找某个特定的节点或者包含某个指定的值得节点。被嵌套在方括号中。

选取未知节点：使用通配符选取未知的XML元素。
*       :   匹配任何元素节点
@*      :   匹配任何属性节点
node()  :   匹配任何类型的节点


选取若干路径：在路径表达式中使用“|”运算符，可选取若干个路径。


XPath轴：相对于当前节点的节点集。

ancestor	        :       选取当前节点的所有先辈（父、祖父等）。
ancestor-or-self    :       选取当前节点的所有先辈（父、祖父等）以及当前节点本身。
attribute	        :       选取当前节点的所有属性。
child               :       选取当前节点的所有子元素。
descendant	        :       选取当前节点的所有后代元素（子、孙等）。
descendant-or-self	:       选取当前节点的所有后代元素（子、孙等）以及当前节点本身。
following	        :       选取文档中当前节点的结束标签之后的所有节点。
namespace	        :       选取当前节点的所有命名空间节点。
parent              :       选取当前节点的父节点。
preceding	        :       选取文档中当前节点的开始标签之前的所有节点。
preceding-sibling	:       选取当前节点之前的所有同级节点。
self                :       选取当前节点。



位置路径表达式：
位置路径可以是绝对的，可以是相对的。绝对路径起始于正斜杠(/),而相对路径不会。位置路径均包括一个或多个步，每个步均被斜杠分割。

绝对位置路径：     /step/step/...

相对位置路径：     step/step/...

每个步均根据当前节点集之中的节点来进行计算。

步（step)包括：
    轴（axis,定义所选节点与当前节点之间的树关系）
    节点测试（node-test，识别某个轴内部的节点）
    零个或多个谓语（predicate，更深入地提炼所选的节点集）

步的语法：   轴名称::节点测试[谓语]

child::book         :       选取所有属于当前节点的子元素的 book 节点。
attribute::lang     :       选取当前节点的 lang 属性。
child::*            :       选取当前节点的所有子元素。
attribute::*        :       选取当前节点的所有属性。
child::text()       :       选取当前节点的所有文本子节点。
child::node()       :       选取当前节点的所有子节点。
descendant::book    :       选取当前节点的所有 book 后代。
ancestor::book      :       选择当前节点的所有 book 先辈。
ancestor-or-self::book  :   选取当前节点的所有 book 先辈以及当前节点（如果此节点是 book 节点）
child::*/child::price   :   选取当前节点的所有 price 孙节点。



XPath表达式可返回节点集、字符串、逻辑值以及数字。



XPath表达式的例子以及对应含义：
/html/head/title: 选择HTML文档中的<head>标签内的<title> 元素

/html/head/title/text(): 选择上面提到的title元素的文字

//td:选择所有的<td>元素

//div[@class="mine"]:选择所有具有clas="mine"属性的div元素




Selector四个基本的方法：

xpath():传入XPath表达式，返回该表达式所对应的所有节点的selector list列表。

css():传入css表达式，返回该表达式所对应的所有节点的selector list列表。

extract(): 序列化该节点为Unicode字符串并返回list。

re(): 根据传入的正则表达式对数据进行提取，返回Unicode字符串list列表。


使用item
Item对象是自定义的python字典。使用标准字典语法来获取到其每个字段的值。

保存爬取到的数据
使用Feed exports 存储。（scrapy crawl domz(名称) -o items.json）
将采用JSON格式对爬取的数据进行序列化，生成items.json文件。
